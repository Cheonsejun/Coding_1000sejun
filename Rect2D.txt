package Training;

import javax.swing.*;
import java.awt.*;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Rectangle2D.Float;
import java.awt.geom.RoundRectangle2D;
import java.util.ArrayList;

public class More2 extends JFrame{

	public More2() {
		this.setSize(600, 170);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setTitle("2D");
		this.setLocationRelativeTo(null);
		
		JPanel p = new Power();
		
		this.add(p);
		this.setVisible(true);
	}
	
	public static void main(String[] args) {
		new More2();
	}
}

	class Power extends JPanel{
		ArrayList<Shape> s = new ArrayList<>();
		public Power() {
			s.add(new Rectangle2D.Float(10, 10, 70, 80));
			
			s.add(new RoundRectangle2D.Float(110, 10, 70, 80, 30, 30));
			
			s.add(new Ellipse2D.Float(210, 10, 80, 80));
			
			s.add(new Arc2D.Float(310, 10, 80, 80, 90, 90, Arc2D.OPEN));
			
			s.add(new Arc2D.Float(410, 10, 80, 80, 0, 180, Arc2D.CHORD));
			
			s.add(new Arc2D.Float(510, 10, 80, 80, 45, 90, Arc2D.PIE));
			
		}
		
		public void paintComponent(Graphics g) {
			super.paintComponents(g);
			
			Graphics2D g2 = (Graphics2D) g;
			
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
					             RenderingHints.VALUE_ANTIALIAS_ON);
//			g2.setRenderingHint g2의 그래픽품질을 올려준다 하지만 연산시간은 더걸린다
			
			g2.setColor(Color.black);
			g2.setStroke(new BasicStroke(5));
			for(Shape a : s) 
			g2.draw(a);
		}
	}
	